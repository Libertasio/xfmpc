/* mpdclient.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "Xfmpc", lower_case_cprefix = "xfmpc_")]
namespace Xfmpc {
	[Compact]
	[CCode (cheader_filename = "mpdclient.h")]
	public class Mpdclient {
		public bool connect ();
		public bool database_read (string dir, string *filename, string *basename, bool *is_dir);
		public bool database_refresh ();
		public bool database_search (string query, string *filename, string *basename);
		public void disconnect ();
		public static unowned Xfmpc.Mpdclient get ();
		public unowned string get_album ();
		public unowned string get_artist ();
		public unowned string get_date ();
		public int get_id ();
		public int get_pos ();
		public bool get_random ();
		public bool get_repeat ();
		public unowned Xfmpc.SongInfo get_song_info (int id);
		public int get_time ();
		public unowned string get_title ();
		public int get_total_time ();
		public uchar get_volume ();
		public bool is_connected ();
		public bool is_playing ();
		public bool is_stopped ();
		public bool next ();
		public bool pause ();
		public bool play ();
		public bool playlist_clear ();
		public int playlist_get_length ();
		public int playlist_get_total_time ();
		public bool playlist_has_filename (string filename, bool is_dir);
		public bool playlist_read (int *id, int *pos, string *filename, string *song, string *length);
		public bool pp ();
		public bool previous ();
		public bool queue_add (string path);
		public bool queue_clear ();
		public bool queue_commit ();
		public bool queue_remove_id (int id);
		public bool set_id (int id);
		public bool set_random (bool random);
		public bool set_repeat (bool repeat);
		public bool set_song_time (uint time);
		public bool set_volume (uchar volume);
		public bool stop ();
		public void update_status ();
		public virtual signal void connected ();
		public virtual signal void song_changed ();
		public virtual signal void pp_changed (bool is_playing);
		public virtual signal void time_changed (int time, int total_time);
		public virtual signal void volume_changed (int volume);
		public virtual signal void stopped ();
		public virtual signal void database_changed ();
		public virtual signal void playlist_changed ();
		public virtual signal void repeat ();
		public virtual signal void random ();
	}
	[Compact]
	[CCode (cheader_filename = "mpdclient.h")]
	public class SongInfo {
		public weak string album;
		public weak string artist;
		public weak string date;
		public weak string filename;
		public weak string genre;
		public weak string title;
		public weak string track;
	}
}
